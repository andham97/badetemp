type WaterReading {
    location: Location!
    temperature: Float!
    time: String!
}

type Location {
    id: Int!
    lat: Float!
    lng: Float!
    name: String!
    area: String!
}

type AirReading {
    location: Location!
    precipitation: Float
    temperature: Float!
    time: String!
}

type Query {
    areas: [String]
    areaAirReadings(area: String!): [AirReading]
    areaWaterReadings(area: String!): [WaterReading]
    areaNewestWaterReadings(area: String!): [WaterReading]
    locations: [Location]
    locationAirReadings(location: Int!): [AirReading]
    locationsAirReadings(locations: [Int]!): [AirReading]
    locationWaterReadings(location: Int!): [WaterReading]
    locationsWaterReadings(locations: [Int]!): [WaterReading]
}

type Mutation {
    addWaterReading(reading: WaterReadingInput): WaterReading
}

input WaterReadingInput {
    location: Int
    temperature: Float
    time: String
}